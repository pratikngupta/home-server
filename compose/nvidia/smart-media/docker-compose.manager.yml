######################################################
#
# Media Manager
#
# Services: radarr, sonarr, lidarr, prowlarr
#
######################################################

services:
  # Radarr: Movie management system
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:radarr|linuxserver/mods:radarr-striptracks
      - TP_THEME=plex
      - TP_ADDON=radarr-4k-logo|radarr-alt-calendar
      - STRIPTRACKS_ARGS=--audio :org:hin:eng --subs :eng
    env_file: .env
    volumes:
      - ${DATA_DIR}/media-server/radarr:/config
      - ${MEDIA_DIR}:/data
      # timezone
      - /etc/localtime:/etc/localtime:ro

    restart: unless-stopped
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.radarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.radarr-rtr-bypass.rule=Host(`radarr.$DOMAIN`) && Header(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
      - "traefik.http.routers.radarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.radarr-rtr.entrypoints=https"
      - "traefik.http.routers.radarr-rtr.rule=Host(`radarr.$DOMAIN`)"
      - "traefik.http.routers.radarr-rtr.priority=99"
      ## Enable tls
      - "traefik.http.routers.radarr-rtr.tls=true"
      - "traefik.http.routers.radarr-rtr-bypass.tls=true"
      ## Middlewares
      - "traefik.http.routers.radarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.radarr-rtr.middlewares=chain-tinyauth-oauth@file"

      ## HTTP Services
      - "traefik.http.routers.radarr-rtr.service=radarr-svc"
      - "traefik.http.routers.radarr-rtr-bypass.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"
      - "dev.dozzle.group=Smart Media"

      ### REDIRECT TO GITHUB ### Usefull for redirecting to github page easily
      # add if radarr.techsanctuary.me/github is called, it will redirect to the github page
      - "traefik.http.routers.radarr-techsanctuary.rule=Host(`radarr.${DOMAIN}`) && Path(`/github`)"
      - "traefik.http.routers.radarr-techsanctuary.entrypoints=https"
      - "traefik.http.routers.radarr-techsanctuary.middlewares=redirect-to-github-radarr@file"
      - "traefik.http.routers.radarr-techsanctuary.tls=true"
      # set priority to 1 so it will be checked first
      - "traefik.http.routers.radarr-techsanctuary.priority=100"
      # define service for the redirect
      - "traefik.http.routers.radarr-techsanctuary.service=radarr-techsanctuary"
      - "traefik.http.services.radarr-techsanctuary.loadbalancer.server.port=7878"

    depends_on:
      mount-check:
        condition: service_healthy

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    env_file: .env
    networks:
      - traefik_network
    volumes:
      - ${DATA_DIR}/media-server/bazarr:/config
      - ${MEDIA_DIR}:/data
      # timezone
      - /etc/localtime:/etc/localtime:ro
    # ports:
    #   - 6767:6767
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.bazarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.bazarr-rtr-bypass.rule=Host(`bazarr.$DOMAIN`) && Header(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
      - "traefik.http.routers.bazarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.bazarr-rtr.entrypoints=https"
      - "traefik.http.routers.bazarr-rtr.rule=Host(`bazarr.$DOMAIN`)"
      - "traefik.http.routers.bazarr-rtr.priority=99"
      ## Enable tls
      - "traefik.http.routers.bazarr-rtr.tls=true"
      - "traefik.http.routers.bazarr-rtr-bypass.tls=true"
      ## Middlewares
      - "traefik.http.routers.bazarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.bazarr-rtr.middlewares=chain-tinyauth-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.bazarr-rtr.service=bazarr-svc"
      - "traefik.http.routers.bazarr-rtr-bypass.service=bazarr-svc"
      - "traefik.http.services.bazarr-svc.loadbalancer.server.port=6767"
      - "dev.dozzle.group=Smart Media"

      ### REDIRECT TO GITHUB ### Usefull for redirecting to github page easily
      # add if bazarr.techsanctuary.me/github is called, it will redirect to the github page
      - "traefik.http.routers.bazarr-techsanctuary.rule=Host(`bazarr.${DOMAIN}`) && Path(`/github`)"
      - "traefik.http.routers.bazarr-techsanctuary.entrypoints=https"
      - "traefik.http.routers.bazarr-techsanctuary.middlewares=redirect-to-github-bazarr@file"
      - "traefik.http.routers.bazarr-techsanctuary.tls=true"
      # set priority to 1 so it will be checked first
      - "traefik.http.routers.bazarr-techsanctuary.priority=100"
      # define service for the redirect
      - "traefik.http.routers.bazarr-techsanctuary.service=bazarr-techsanctuary"
      - "traefik.http.services.bazarr-techsanctuary.loadbalancer.server.port=6767"

    depends_on:
      mount-check:
        condition: service_healthy

  # Sonarr: TV management system
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:sonarr
      - TP_THEME=plex
      - TP_ADDON=sonarr-4k-text-logo
    # ports:
    #   - 8989:8989
    env_file: .env
    volumes:
      - ${DATA_DIR}/sonarr:/config
      - ${MEDIA_DIR}:/data
      # timezone
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.sonarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr-bypass.rule=Host(`sonarr.$DOMAIN`) && Header(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
      - "traefik.http.routers.sonarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.sonarr-rtr.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.$DOMAIN`)"
      - "traefik.http.routers.sonarr-rtr.priority=99"
      ## Enable tls
      - "traefik.http.routers.sonarr-rtr.tls=true"
      - "traefik.http.routers.sonarr-rtr-bypass.tls=true"
      ## Middlewares
      - "traefik.http.routers.sonarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-tinyauth-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      - "traefik.http.routers.sonarr-rtr-bypass.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"
      - "dev.dozzle.group=Smart Media"

      ### REDIRECT TO GITHUB ### Usefull for redirecting to github page easily
      # add if sonarr.techsanctuary.me/github is called, it will redirect to the github page
      - "traefik.http.routers.sonarr-techsanctuary.rule=Host(`sonarr.${DOMAIN}`) && Path(`/github`)"
      - "traefik.http.routers.sonarr-techsanctuary.entrypoints=https"
      - "traefik.http.routers.sonarr-techsanctuary.middlewares=redirect-to-github-sonarr@file"
      - "traefik.http.routers.sonarr-techsanctuary.tls=true"
      # set priority to 1 so it will be checked first
      - "traefik.http.routers.sonarr-techsanctuary.priority=100"
      # define service for the redirect
      - "traefik.http.routers.sonarr-techsanctuary.service=sonarr-techsanctuary"
      - "traefik.http.services.sonarr-techsanctuary.loadbalancer.server.port=8989"

    depends_on:
      mount-check:
        condition: service_healthy

  # Prowlarr: Indexer manager
  prowlarr:
    image: linuxserver/prowlarr
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:prowlarr
      - TP_THEME=plex
      - TP_ADDON=prowlarr-4k-logo
    # ports:
    #   - 9696:9696
    env_file: .env
    volumes:
      - ${DATA_DIR}/media-server/prowlarr:/config
      # timezone
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"

      ## HTTP Routers
      - "traefik.http.routers.prowlarr-rtr.entrypoints=https"
      - "traefik.http.routers.prowlarr-rtr.rule=Host(`prowlarr.$DOMAIN`)"
      - "traefik.http.routers.prowlarr-rtr.priority=99"
      - "traefik.http.routers.prowlarr-rtr.tls=true"
      - "traefik.http.routers.prowlarr-rtr.middlewares=chain-tinyauth-oauth@file"
      - "traefik.http.routers.prowlarr-rtr.service=prowlarr-svc"

      ## Auth Bypass Router
      - "traefik.http.routers.prowlarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.prowlarr-rtr-bypass.rule=Host(`prowlarr.$DOMAIN`) && Header(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)"
      - "traefik.http.routers.prowlarr-rtr-bypass.priority=100"
      - "traefik.http.routers.prowlarr-rtr-bypass.tls=true"
      - "traefik.http.routers.prowlarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.prowlarr-rtr-bypass.service=prowlarr-svc"

      ## HTTP Service
      - "traefik.http.services.prowlarr-svc.loadbalancer.server.port=9696"

      ## Redirect to GitHub
      - "traefik.http.routers.prowlarr-techsanctuary.rule=Host(`prowlarr.$DOMAIN`) && Path(`/github`)"
      - "traefik.http.routers.prowlarr-techsanctuary.entrypoints=https"
      - "traefik.http.routers.prowlarr-techsanctuary.tls=true"
      - "traefik.http.routers.prowlarr-techsanctuary.priority=100"
      - "traefik.http.routers.prowlarr-techsanctuary.middlewares=redirect-to-github-prowlarr@file"
      - "traefik.http.routers.prowlarr-techsanctuary.service=prowlarr-techsanctuary"
      - "traefik.http.services.prowlarr-techsanctuary.loadbalancer.server.port=9696"

      ## Metadata
      - "dev.dozzle.group=Smart Media"

    depends_on:
      mount-check:
        condition: service_healthy

networks:
  traefik_network:
    external: true

