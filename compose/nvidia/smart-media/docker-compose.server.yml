######################################################
#
# Media Server
#
# Services: Plex, Jellyfin
#
######################################################

services:
  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - HOSTNAME=plex.${DOMAIN}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
      - APPLE_DIR=/mnt/storage/photo/apple
      - GOOGLE_DIR=/mnt/storage/photo/google
      - ORIGINAL_DIR=/mnt/storage/photo/original-archive
    env_file: .env
    volumes:
      - ${DATA_DIR}/plex:/config
      - ${MEDIA_DIR}/media:/movies
      # timezone
      - /etc/localtime:/etc/localtime:ro
      - /mnt/storage/photo/apple:/mnt/photo/apple
      - /mnt/storage/photo/google:/mnt/photo/google
      - /mnt/storage/photo/original-archive:/mnt/photo/original-archive

    network_mode: host
    privileged: true # libusb_init failed
    restart: unless-stopped
    # networks:
    #   - media-network
    devices:
      - /dev/dri:/dev/dri
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities:
                - gpu
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`playninja.${DOMAIN}`)"
      - "traefik.http.routers.plex.entrypoints=https"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.routers.plex.service=plex-media-server@file"
      - "traefik.http.routers.plex.middlewares=jellyfin-mw"

      ## HTTP Service
      - "traefik.http.services.plex.loadBalancer.server.port=32400"
      - "traefik.http.services.plex.loadBalancer.passHostHeader=true"

      ## Middleware
      - "traefik.http.middlewares.jellyfin-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex"
      - "traefik.http.middlewares.jellyfin-mw.headers.SSLRedirect=true"
      - "traefik.http.middlewares.jellyfin-mw.headers.SSLForceHost=true"
      - "traefik.http.middlewares.jellyfin-mw.headers.STSSeconds=315360000"
      - "traefik.http.middlewares.jellyfin-mw.headers.STSIncludeSubdomains=true"
      - "traefik.http.middlewares.jellyfin-mw.headers.STSPreload=true"
      - "traefik.http.middlewares.jellyfin-mw.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.jellyfin-mw.headers.frameDeny=true"
      - "traefik.http.middlewares.jellyfin-mw.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.jellyfin-mw.headers.customResponseHeaders.X-XSS-PROTECTION=1"
      - "traefik.http.middlewares.jellyfin-mw.headers.customFrameOptionsValue='allow-from https://${DOMAIN}'"
      - "dev.dozzle.group=Smart Media"
    depends_on:
      mount-check:
        condition: service_healthy

  # jellyfin:
  #   image: jellyfin/jellyfin
  #   container_name: jellyfin
  #   # user: 1000:1000
  #   network_mode: "host"
  #   env_file: .env
  #   volumes:
  #     - ${DATA_DIR}/jellyfin/config:/config
  #     - ${DATA_DIR}/jellyfin/cache:/cache
  #     - type: bind
  #       source: /mnt/movie/data2
  #       target: /media

  #   restart: "unless-stopped"
  #   # Optional - alternative address used for autodiscovery
  #   environment:
  #     - JELLYFIN_PublishedServerUrl=https://jellyfin.techsanctuary.me
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN}`)"
  #     - "traefik.http.routers.jellyfin.entrypoints=https"
  #     - "traefik.http.routers.jellyfin.tls=true"
  #     - "traefik.http.routers.jellyfin.service=jellyfin-media-server@file"
  #     - "traefik.http.routers.jellyfin.middlewares=jellyfin-mw"

  #     ## HTTP Service
  #     - "traefik.http.services.jellyfin.loadBalancer.server.port=8096"
  #     - "traefik.http.services.jellyfin.loadBalancer.passHostHeader=true"

  navidrome:
    image: deluan/navidrome:latest
    container_name: navidrome
    # user: 1000:1000 # should be owner of volumes
    networks:
      - traefik_network
    ports:
      - "4533:4533"
    restart: unless-stopped
    env_file: .env
    volumes:
      - ${DATA_DIR}/navidrome:/data:rw
      - ${MEDIA_DIR}/media/music:/music:ro
    labels:
      - "traefik.enable=true"
      ## navidrome UI
      - "traefik.http.routers.navidrome-rtr.entrypoints=https"
      - "traefik.http.routers.navidrome-rtr.rule=Host(`navidrome.$DOMAIN`)"
      - "traefik.http.routers.navidrome-rtr.priority=99"
      - "traefik.http.routers.navidrome-rtr.tls=true"
      - "traefik.http.routers.navidrome-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.navidrome-rtr.service=navidrome-svc"
      - "traefik.http.services.navidrome-svc.loadbalancer.server.port=4533"
      ## Redirect to GitHub
      - "traefik.http.routers.navidrome-github.rule=Host(`navidrome.$DOMAIN`) && Path(`/github`)"
      - "traefik.http.routers.navidrome-github.entrypoints=https"
      - "traefik.http.routers.navidrome-github.tls=true"
      - "traefik.http.routers.navidrome-github.priority=100"
      - "traefik.http.routers.navidrome-github.middlewares=redirect-to-github-navidrome@file"
      - "traefik.http.routers.navidrome-github.service=navidrome-github"
      - "traefik.http.services.navidrome-github.loadbalancer.server.port=4533"
    depends_on:
      mount-check:
        condition: service_healthy

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    # ports:
    #   - 13378:80
    networks:
      - traefik_network
    volumes:
      - ${MEDIA_DIR}/media:/media
      - ${DATA_DIR}/audiobookshelf/config>:/config
      - ${DATA_DIR}/audiobookshelf/metadata>:/metadata
    environment:
      - TZ=America/Los_Angeles
    env_file: .env
    labels:
      - "traefik.enable=true"
      ## audiobookshelf UI
      - "traefik.http.routers.audiobookshelf-rtr.entrypoints=https"
      - "traefik.http.routers.audiobookshelf-rtr.rule=Host(`audiobookshelf.$DOMAIN`)"
      - "traefik.http.routers.audiobookshelf-rtr.priority=99"
      - "traefik.http.routers.audiobookshelf-rtr.tls=true"
      - "traefik.http.routers.audiobookshelf-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.audiobookshelf-rtr.service=audiobookshelf-svc"
      - "traefik.http.services.audiobookshelf-svc.loadbalancer.server.port=80"
      ## Redirect to GitHub
      - "traefik.http.routers.audiobookshelf-github.rule=Host(`audiobookshelf.$DOMAIN`) && Path(`/github`)"
      - "traefik.http.routers.audiobookshelf-github.entrypoints=https"
      - "traefik.http.routers.audiobookshelf-github.tls=true"
      - "traefik.http.routers.audiobookshelf-github.priority=100"
      - "traefik.http.routers.audiobookshelf-github.middlewares=redirect-to-github-audiobookshelf@file"
      - "traefik.http.routers.audiobookshelf-github.service=audiobookshelf-github"
      - "traefik.http.services.audiobookshelf-github.loadbalancer.server.port=80"

  calibre:
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - TZ=Etc/UTC
    networks:
      - traefik_network
    volumes:
      # - ${DATA_DIR}/calibre/config>:/config
      - ${MEDIA_DIR}/media/books:/books
      - ${MEDIA_DIR}/media/book:/config

    # ports:
    #   - 8080:8080 # 	Calibre desktop gui
    #   - 8181:8181 # 	Calibre desktop gui HTTPS.
    #   - 8081:8081 #   Calibre webserver gui.
    restart: unless-stopped
    env_file: .env
    labels:
      - "traefik.enable=true"
      ## audiobookshelf UI
      - "traefik.http.routers.calibre-rtr.entrypoints=https"
      - "traefik.http.routers.calibre-rtr.rule=Host(`calibre.$DOMAIN`)"
      - "traefik.http.routers.calibre-rtr.priority=99"
      - "traefik.http.routers.calibre-rtr.tls=true"
      - "traefik.http.routers.calibre-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.calibre-rtr.service=calibre-svc"
      - "traefik.http.services.calibre-svc.loadbalancer.server.port=8080"
      ## Redirect to GitHub
      - "traefik.http.routers.calibre-rtr-server.entrypoints=https"
      - "traefik.http.routers.calibre-rtr-server.rule=Host(`calibre-server.$DOMAIN`)"
      - "traefik.http.routers.calibre-rtr-server.priority=99"
      - "traefik.http.routers.calibre-rtr-server.tls=true"
      - "traefik.http.routers.calibre-rtr-server.middlewares=chain-no-auth@file"
      - "traefik.http.routers.calibre-rtr-server.service=calibre-svc-server"
      - "traefik.http.services.calibre-svc-server.loadbalancer.server.port=8081"

networks:
  traefik_network:
    external: true
