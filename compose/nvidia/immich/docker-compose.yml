#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

name: immich

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    extends:
      file: hwaccel.transcoding.yml
      service: nvenc # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - ${APPLE_DIR}:/mnt/photo/apple
      - ${GOOGLE_DIR}:/mnt/photo/google
      - ${ORIGINAL_DIR}:/mnt/photo/original-archive
    env_file:
      - .env
    # ports:
    #   - '2283:2283'
    depends_on:
      - redis
      - database
    restart: always
    networks:
      - traefik_network
      - immich_internal
    healthcheck:
      disable: false
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich.rule=Host(`immich.${DOMAIN}`)"
      - "traefik.http.routers.immich.entrypoints=https"
      - "traefik.http.routers.immich.tls=true"
      - "traefik.http.services.immich.loadbalancer.server.port=2283"
      # define network for traefik
      - "traefik.docker.network=traefik_network"
      - "traefik.http.routers.immich.middlewares=chain-no-auth@file"

  immichframe:
    container_name: immichframe
    image: ghcr.io/immichframe/immichframe:latest
    restart: on-failure
    volumes:
      - ${DATA_DIR}/immich/frame:/app/Config
    #   - PATH/TO/CUSTOMCSS/custom.css:/app/wwwroot/static/custom.css
    # ports:
    #   - "8080:8080"
    env_file: .env
    environment:
      TZ: America/Toronto
    networks:
      - immich_internal
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich-frame.rule=Host(`immich-frame.${DOMAIN}`)"
      - "traefik.http.routers.immich-frame.entrypoints=https"
      - "traefik.http.routers.immich-frame.tls=true"
      - "traefik.http.services.immich-frame.loadbalancer.server.port=8080"
      # define network for traefik
      - "traefik.docker.network=traefik_network"
      - "traefik.http.routers.immich-frame.middlewares=chain-no-auth@file"

  immich_power_tools:
    container_name: immich_power_tools
    image: ghcr.io/varun-raj/immich-power-tools:latest
    ports:
      - "3000:3000"
    env_file: .env
    networks:
      - traefik_network
      - immich_internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich-tools.rule=Host(`immich-tools.${DOMAIN}`)"
      - "traefik.http.routers.immich-tools.entrypoints=https"
      - "traefik.http.routers.immich-tools.tls=true"
      - "traefik.http.services.immich-tools.loadbalancer.server.port=3000"
      # define network for traefik
      - "traefik.docker.network=traefik_network"
      - "traefik.http.routers.immich-tools.middlewares=chain-no-auth@file"

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    extends:
      # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
      file: hwaccel.ml.yml
      service: cuda # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    networks:
      - immich_internal
    restart: always
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:eaba718fecd1196d88533de7ba49bf903ad33664a92debb24660a922ecd9cac8
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always
    networks:
      - immich_internal

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    restart: always
    networks:
      - immich_internal
    # ports:
    #   - 5432:5432

volumes:
  model-cache:
  pgdata:
    
networks:
  traefik_network:
    external: true
  immich_internal:
    name: immich_internal
    driver: bridge
