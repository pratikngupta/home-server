http:
  routers:
    # Define a connection between requests and services
    gonic-router:
      rule: "Host(`gonic.webninja.me`)"
       # If the rule matches, applies the middleware
      middlewares:
      - chain-basic-auth
      # If the rule matches, forward to the whoami service (declared below)
      service: gonic-service
      entryPoints:
        - https
      tls: true

    navidrome-router:
      rule: "Host(`navidrome.webninja.me`)"
       # If the rule matches, applies the middleware
      middlewares:
      - chain-basic-auth
      # If the rule matches, forward to the whoami service (declared below)
      service: navidrome-service
      entryPoints:
        - https
      tls: true

    speedtest-router:
      rule: "Host(`speedtest2.webninja.me`)"
       # If the rule matches, applies the middleware
      middlewares:
      - chain-no-auth
      # If the rule matches, forward to the whoami service (declared below)
      service: speedtest-service
      entryPoints:
        - https
      tls: true

  services:
    gonic-service:
      loadBalancer:
        passHostHeader: false
        servers:
          # - url: "http://192.168.4.70:8080"
          - url: "https://gonic.techsanctuary.me"

    navidrome-service:
      loadBalancer:
        passHostHeader: false
        servers:
          # - url: "http://192.168.4.70:8080"
          - url: "https://navidrome.techsanctuary.me"

    speedtest-service:
      loadBalancer:
        passHostHeader: false
        servers:
          # - url: "http://192.168.4.70:8080"
          - url: "https://speedtest.techsanctuary.me"


tls:
  options:
    default:
      sniStrict: true
      minVersion: "VersionTLS12"
      curvePreferences:
        - "secp521r1"
        - "secp384r1"
      cipherSuites:
        - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305"
        - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
        - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
        - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
        - "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
        - "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
    mintls13:
      minVersion: "VersionTLS13"