######################################################
#
# Media Manager
#
# Services: radarr, sonarr, lidarr, prowlarr
#
######################################################

services:
  # Radarr: Movie management system
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:radarr
      - TP_THEME=power
      - TP_ADDON=radarr-4k-logo|radarr-alt-calendar
      - TP_COMMUNITY_THEME=true
    env_file: .env
    volumes:
      - ${DATA_DIR}/radarr:/config
      - ./content:/data
      - /mnt/main/Movie:/movies
      - "/home/pratik/Docker/onedrive/data/Movies (Homelab Upload):/onedrive"
      # timezone
      - /etc/localtime:/etc/localtime:ro

    restart: unless-stopped
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.radarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.radarr-rtr-bypass.rule=Host(`radarr.$DOMAIN`) && Header(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
      - "traefik.http.routers.radarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.radarr-rtr.entrypoints=https"
      - "traefik.http.routers.radarr-rtr.rule=Host(`radarr.$DOMAIN`)"
      - "traefik.http.routers.radarr-rtr.priority=99"
      ## Enable tls
      - "traefik.http.routers.radarr-rtr.tls=true"
      - "traefik.http.routers.radarr-rtr-bypass.tls=true"
      ## Middlewares
      - "traefik.http.routers.radarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.radarr-rtr.middlewares=chain-github-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.radarr-rtr.service=radarr-svc"
      - "traefik.http.routers.radarr-rtr-bypass.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"

      ### REDIRECT TO GITHUB ### Usefull for redirecting to github page easily
      # add if radarr.webninja.me/github is called, it will redirect to the github page
      - "traefik.http.routers.radarr-webninja.rule=Host(`radarr.${DOMAIN}`) && Path(`/github`)"
      - "traefik.http.routers.radarr-webninja.entrypoints=https"
      - "traefik.http.routers.radarr-webninja.middlewares=redirect-to-github-radarr@file"
      - "traefik.http.routers.radarr-webninja.tls=true"
      # set priority to 1 so it will be checked first
      - "traefik.http.routers.radarr-webninja.priority=100"
      # define service for the redirect
      - "traefik.http.routers.radarr-webninja.service=radarr-webninja"
      - "traefik.http.services.radarr-webninja.loadbalancer.server.port=7878"

  # Sonarr: TV management system
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:sonarr
      - TP_THEME=mind
      - TP_ADDON=sonarr-4k-text-logo
      - TP_COMMUNITY_THEME=true
    # ports:
    #   - 8989:8989
    env_file: .env
    volumes:
      - ${DATA_DIR}/sonarr:/config
      - ./content:/data
      # timezone
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    networks:
      - traefik_network

    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.sonarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr-bypass.rule=Host(`sonarr.$DOMAIN`) && Header(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
      - "traefik.http.routers.sonarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.sonarr-rtr.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.$DOMAIN`)"
      - "traefik.http.routers.sonarr-rtr.priority=99"
      ## Enable tls
      - "traefik.http.routers.sonarr-rtr.tls=true"
      - "traefik.http.routers.sonarr-rtr-bypass.tls=true"
      ## Middlewares
      - "traefik.http.routers.sonarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-github-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      - "traefik.http.routers.sonarr-rtr-bypass.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"

      ### REDIRECT TO GITHUB ### Usefull for redirecting to github page easily
      # add if sonarr.webninja.me/github is called, it will redirect to the github page
      - "traefik.http.routers.sonarr-webninja.rule=Host(`sonarr.${DOMAIN}`) && Path(`/github`)"
      - "traefik.http.routers.sonarr-webninja.entrypoints=https"
      - "traefik.http.routers.sonarr-webninja.middlewares=redirect-to-github-sonarr@file"
      - "traefik.http.routers.sonarr-webninja.tls=true"
      # set priority to 1 so it will be checked first
      - "traefik.http.routers.sonarr-webninja.priority=100"
      # define service for the redirect
      - "traefik.http.routers.sonarr-webninja.service=sonarr-webninja"
      - "traefik.http.services.sonarr-webninja.loadbalancer.server.port=8989"

  # Lidarr - Music
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
    # ports:
    #   - 8686:8686
    volumes:
      - ${DATA_DIR}/lidarr:/config
      - ./content:/data
      # timezone
      - /etc/localtime:/etc/localtime:ro
    networks:
      - traefik_network
    restart: unless-stopped
    env_file: .env
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.lidarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.lidarr-rtr-bypass.rule=Host(`lidarr.$DOMAIN`) && Header(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
      - "traefik.http.routers.lidarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.lidarr-rtr.entrypoints=https"
      - "traefik.http.routers.lidarr-rtr.rule=Host(`lidarr.$DOMAIN`)"
      - "traefik.http.routers.lidarr-rtr.priority=99"
      ## Enable tls
      - "traefik.http.routers.lidarr-rtr.tls=true"
      - "traefik.http.routers.lidarr-rtr-bypass.tls=true"
      ## Middlewares
      - "traefik.http.routers.lidarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.lidarr-rtr.middlewares=chain-github-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.lidarr-rtr.service=lidarr-svc"
      - "traefik.http.routers.lidarr-rtr-bypass.service=lidarr-svc"
      - "traefik.http.services.lidarr-svc.loadbalancer.server.port=8686"

      ### REDIRECT TO GITHUB ### Usefull for redirecting to github page easily
      # add if lidarr.webninja.me/github is called, it will redirect to the github page
      - "traefik.http.routers.lidarr-webninja.rule=Host(`lidarr.${DOMAIN}`) && Path(`/github`)"
      - "traefik.http.routers.lidarr-webninja.entrypoints=https"
      - "traefik.http.routers.lidarr-webninja.middlewares=redirect-to-github-lidarr@file"
      - "traefik.http.routers.lidarr-webninja.tls=true"
      # set priority to 1 so it will be checked first
      - "traefik.http.routers.lidarr-webninja.priority=100"
      # define service for the redirect
      - "traefik.http.routers.lidarr-webninja.service=lidarr-webninja"
      - "traefik.http.services.lidarr-webninja.loadbalancer.server.port=8686"

  # Prowlarr: Indexer manager
  prowlarr:
    image: linuxserver/prowlarr
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:prowlarr
      - TP_THEME=power
      - TP_ADDON=prowlarr-4k-logo
      - TP_COMMUNITY_THEME=true
    # ports:
    #   - 9696:9696
    env_file: .env
    volumes:
      - ${DATA_DIR}/prowlarr:/config
      # timezone
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.prowlarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.prowlarr-rtr-bypass.rule=Host(`prowlarr.$DOMAIN`) && Header(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)"
      - "traefik.http.routers.prowlarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.prowlarr-rtr.entrypoints=https"
      - "traefik.http.routers.prowlarr-rtr.rule=Host(`prowlarr.$DOMAIN`)"
      - "traefik.http.routers.prowlarr-rtr.priority=99"
      ## Enable tls
      - "traefik.http.routers.prowlarr-rtr.tls=true"
      - "traefik.http.routers.prowlarr-rtr-bypass.tls=true"
      ## Middlewares
      - "traefik.http.routers.prowlarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.prowlarr-rtr.middlewares=chain-github-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.prowlarr-rtr.service=prowlarr-svc"
      - "traefik.http.routers.prowlarr-rtr-bypass.service=prowlarr-svc"
      - "traefik.http.services.prowlarr-svc.loadbalancer.server.port=9696"

      ### REDIRECT TO GITHUB ### Usefull for redirecting to github page easily
      # add if prowlarr.webninja.me/github is called, it will redirect to the github page
      - "traefik.http.routers.prowlarr-webninja.rule=Host(`prowlarr.${DOMAIN}`) && Path(`/github`)"
      - "traefik.http.routers.prowlarr-webninja.entrypoints=https"
      - "traefik.http.routers.prowlarr-webninja.middlewares=redirect-to-github-prowlarr@file"
      - "traefik.http.routers.prowlarr-webninja.tls=true"
      # set priority to 1 so it will be checked first
      - "traefik.http.routers.prowlarr-webninja.priority=100"
      # define service for the redirect
      - "traefik.http.routers.prowlarr-webninja.service=prowlarr-webninja"
      - "traefik.http.services.prowlarr-webninja.loadbalancer.server.port=9696"

networks:
  traefik_network:
    external: true
### SAMPLE TRAEFIK LABELS WITH GOOGLE_OAUTH MIDDLEWARE
# - "traefik.enable=true"
# ## HTTP Routers Auth Bypass
# - "traefik.http.routers.example-rtr-bypass.entrypoints=https"
# - "traefik.http.routers.example-rtr-bypass.rule=Host(`example.$DOMAIN`) && Header(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
# - "traefik.http.routers.example-rtr-bypass.priority=100"
# ## HTTP Routers Auth
# - "traefik.http.routers.example-rtr.entrypoints=https"
# - "traefik.http.routers.example-rtr.rule=Host(`example.$DOMAIN`)"
# - "traefik.http.routers.example-rtr.priority=99"
# ## Enable tls
# - "traefik.http.routers.radarr-rtr.tls=true"
# - "traefik.http.routers.radarr-rtr-bypass.tls=true"
# ## Middleware
# - "traefik.http.routers.example-rtr-bypass.middlewares=chain-no-auth@file"
# - "traefik.http.routers.example-rtr.middlewares=chain-github-oauth@file"
# ## HTTP Services
# - "traefik.http.routers.example-rtr.service=example-svc"
# - "traefik.http.routers.example-rtr-bypass.service=example-svc"
# - "traefik.http.services.example-svc.loadbalancer.server.port=9696"
# ### REDIRECT TO GITHUB ### Usefull for redirecting to github page easily
# # add if example.webninja.me/github is called, it will redirect to the github page
# - "traefik.http.routers.example-webninja.rule=Host(`example.${DOMAIN}`) && Path(`/github`)"
# - "traefik.http.routers.example-webninja.entrypoints=https"
# - "traefik.http.routers.example-webninja.middlewares=redirect-to-github-example@file"
# - "traefik.http.routers.example-webninja.tls=true"
# # set priority to 1 so it will be checked first
# - "traefik.http.routers.example-webninja.priority=100"
# # define service for the redirect
# - "traefik.http.routers.example-webninja.service=example-webninja"
# - "traefik.http.services.example-webninja.loadbalancer.server.port=9696"
