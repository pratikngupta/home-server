######################################################
#
# Requester Services
#
# Services: overseerr, requestrr
#
######################################################

services:
  # jellyseerr:
  #   image: fallenbagel/jellyseerr:latest
  #   container_name: jellyseerr
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - LOG_LEVEL=debug
  #     - TZ=America/Toronto
  #   networks:
  #     - proxy_default
  #   volumes:
  #     - ./data/jellyseerr:/app/config
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.${DOMAIN}`)"
  #     - "traefik.http.routers.jellyseerr.entrypoints=https"
  #     - "traefik.http.routers.jellyseerr.tls=true"
  #     - "traefik.http.services.jellyseerr.loadbalancer.server.port=8096"
  #     ## Middlewares - Google OAuth
  #     - "traefik.http.routers.jellyseerr.middlewares=chain-google-oauth-external@file"

  overseerr:
    image: sctx/overseerr:develop
    container_name: overseerr #overseerr
    environment:
      - PUID=1000
      - PGID=1000
      - LOG_LEVEL=debug
      - TZ=America/Toronto
    networks:
      - proxy_default
    volumes:
      - ./data/overseerr:/app/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.overseerr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.overseerr-rtr-bypass.rule=Host(`overseerr.$DOMAIN`) && Header(`traefik-auth-bypass-key`, `$TRAEFIK_AUTH_BYPASS_KEY`)" # Bypass Auth for LunaSea on iOS
      - "traefik.http.routers.overseerr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.overseerr-rtr.entrypoints=https"
      - "traefik.http.routers.overseerr-rtr.rule=Host(`overseerr.$DOMAIN`)"
      - "traefik.http.routers.overseerr-rtr.priority=99"
      ## Enable tls
      - "traefik.http.routers.overseerr-rtr.tls=true"
      - "traefik.http.routers.overseerr-rtr-bypass.tls=true"
      ## Middleware
      - "traefik.http.routers.overseerr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.overseerr-rtr.middlewares=chain-google-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.overseerr-rtr.service=overseerr-svc"
      - "traefik.http.routers.overseerr-rtr-bypass.service=overseerr-svc"
      - "traefik.http.services.overseerr-svc.loadbalancer.server.port=5055"

      ### REDIRECT TO GITHUB ### Usefull for redirecting to github page easily
      # add if overseerr.webninja.me/github is called, it will redirect to the github page
      - "traefik.http.routers.overseerr-webninja.rule=Host(`overseerr.${DOMAIN}`) && Path(`/github`)"
      - "traefik.http.routers.overseerr-webninja.entrypoints=https"
      - "traefik.http.routers.overseerr-webninja.middlewares=redirect-to-github-overseerr@file"
      - "traefik.http.routers.overseerr-webninja.tls=true"
      # set priority to 1 so it will be checked first
      - "traefik.http.routers.overseerr-webninja.priority=100"
      # define service for the redirect
      - "traefik.http.routers.overseerr-webninja.service=overseerr-webninja"
      - "traefik.http.services.overseerr-webninja.loadbalancer.server.port=5055"

  requestrr:
    image: darkalfx/requestrr
    hostname: requestrr
    container_name: requestrr
    volumes:
      - ./data/requestrr/config:/root/config
    restart: unless-stopped
    networks:
      - proxy_default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.requestrr.rule=Host(`requestrr.$DOMAIN`)"
      - "traefik.http.routers.requestrr.entrypoints=https"
      - "traefik.http.routers.requestrr.tls=true"
      - "traefik.http.services.requestrr.loadbalancer.server.port=4545"
      ## Middlewares - No Auth
      - "traefik.http.routers.requestrr.middlewares=chain-google-oauth@file"

networks:
  proxy_default:
    external: true
